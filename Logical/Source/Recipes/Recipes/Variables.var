VAR
	DeviceChenged : BOOL := FALSE; (*Variable informing about change of data device*)
	DropDownBoxNamesCollection : ARRAY[0..49] OF STRING[100]; (*Item collection containing recipe names*)
	MpFileManagerUIConnect_0 : MpFileManagerUIConnectType := (DeviceList:=(DeviceNames:=['HDD',9('')],SelectedIndex:=0),File:=(Filter:='.xml')); (*Structure used in MpFileManagerUI setup. Contains information about files in directory.*)
	MpFileManagerUISetup_0 : MpFileManagerUISetupType; (*Structure used in MpFileManagerUI setup.*)
	MpFileManagerUI_0 : MpFileManagerUI; (*Function block used for managing files*)
	MpRecipeRegPar_0 : MpRecipeRegPar;
	MpRecipeXml_0 : MpRecipeXml; (*Function block used for managing recipes*)
	NewRecipeSelected : BOOL; (*Information about new recipe being selected*)
	NodeIdList : ARRAY[0..2] OF UDINT; (*Contains Id of usb devices*)
	ParametersToLoad : ParametersType; (*Object parameters which can be load into gTanks.Parameters*)
	PreviousNumberOfUSBDevices : UDINT := 0; (*Stores information about number of devices before plug/unplug*)
	RecipeName : STRING[80] := 'NewRecipe'; (*String containing name of currently selected recipe*)
	RecipesList : ARRAY[0..49] OF STRING[255] := ['RandomRecipe',49('')]; (*List of recipe names*)
	SelectedRecipeIndex : USINT := 0; (*Index of recipe selected in dropdownbox on recipe page*)
	USB1Aveliable : BOOL := FALSE; (*True if usb in port 1 is detected*)
	USB2Aveliable : BOOL := FALSE; (*True if usb in port 2 is detected*)
	UsbNodeListGet_0 : UsbNodeListGet; (*Function block resposble for reading and saving recipes on usb drive*)
	WaitingForDelete : BOOL := FALSE; (*Variable informing about the recipe waiting to be deleted*)
	WaitingForLoad : BOOL := FALSE; (*Variable informing about the recipe waiting to be loaded *)
	WaitingForSave : BOOL := FALSE; (*Variable informing about the recipe waiting to be saved*)
	ApplyParameters : BOOL := FALSE; (*If true apply recipe parameters to real object.*)
END_VAR
